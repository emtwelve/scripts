#!/bin/bash

# Argument handling
# TODO: use getopts
tool="$1"
arguments="$2"
workspace="$3"
if [ "$#" -lt 3 ]; then
  printf "Usage: run_test.sh /path/to/tool \"-cmd -line -args -and -flags\" /path/to/workspace [ output_files_folder ] [ stdout_file ] [ stderr_file ]\n"
fi
if [ "$#" -ge 4 ]; then
  output_folder="$4"
else
  output_folder=_run_test_output
fi
if [ "$#" -ge 5 ]; then
  stdout_file="$5"
else
  stdout_file=/dev/stdout
fi
if [ "$#" -ge 6 ]; then
  stderr_file="$6"
else
  stderr_file=/dev/stdout
fi

# Run the tool and get before and after snapshots of the files
existing_files=$(ls $workspace)

printf "####\n"
pushd "$workspace" > /dev/null
"$tool" $arguments 2> "$stderr_file" 1> "$stdout_file"
"$tool" -help > help.txt
printf "ret: $?\n\n"
popd > /dev/null

now_files=$(ls $workspace)

# Get only the files the tool generated by diffing dir contents
new_files=$(diff <(echo "$existing_files") <(echo "$now_files"))
# Clean up by removing anything except the filename with awk
new_files=$(awk '/>/ { print $2 }' <(echo "$new_files"))


# Create output folder and transfer the files:
if [[ ! -f "$output_folder" ]]; then
        mkdir "$output_folder" 2> /dev/null
fi
for newfile in $new_files; do
        cp $workspace/$newfile $output_folder/
        rm $workspace/$newfile
done

# Done!
printf "Generated:\n$new_files\nin $output_folder\n"

